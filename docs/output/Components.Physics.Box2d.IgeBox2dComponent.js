Ext.data.JsonP.Components_Physics_Box2d_IgeBox2dComponent({"tagname":"class","name":"Components.Physics.Box2d.IgeBox2dComponent","autodetected":{},"files":[{"filename":"IgeBox2dComponent.js","href":"IgeBox2dComponent.html#Components-Physics-Box2d-IgeBox2dComponent"}],"alternateClassNames":["IgeBox2dComponent"],"extends":"IgeEventingClass","members":[{"name":"_behaviour","tagname":"method","owner":"Components.Physics.Box2d.IgeBox2dComponent","id":"method-_behaviour","meta":{"private":true}},{"name":"_processRemovals","tagname":"method","owner":"Core.IgeEventingClass","id":"method-_processRemovals","meta":{"private":true}},{"name":"addComponent","tagname":"method","owner":"Core.IgeClass","id":"method-addComponent","meta":{}},{"name":"classId","tagname":"method","owner":"Core.IgeClass","id":"method-classId","meta":{}},{"name":"contactListener","tagname":"method","owner":"Components.Physics.Box2d.IgeBox2dComponent","id":"method-contactListener","meta":{}},{"name":"createBody","tagname":"method","owner":"Components.Physics.Box2d.IgeBox2dComponent","id":"method-createBody","meta":{}},{"name":"createFixture","tagname":"method","owner":"Components.Physics.Box2d.IgeBox2dComponent","id":"method-createFixture","meta":{}},{"name":"createWorld","tagname":"method","owner":"Components.Physics.Box2d.IgeBox2dComponent","id":"method-createWorld","meta":{}},{"name":"data","tagname":"method","owner":"Core.IgeClass","id":"method-data","meta":{}},{"name":"destroyBody","tagname":"method","owner":"Components.Physics.Box2d.IgeBox2dComponent","id":"method-destroyBody","meta":{}},{"name":"emit","tagname":"method","owner":"Core.IgeEventingClass","id":"method-emit","meta":{}},{"name":"enableDebug","tagname":"method","owner":"Components.Physics.Box2d.IgeBox2dComponent","id":"method-enableDebug","meta":{}},{"name":"eventList","tagname":"method","owner":"Core.IgeEventingClass","id":"method-eventList","meta":{}},{"name":"extend","tagname":"method","owner":"Core.IgeClass","id":"method-extend","meta":{}},{"name":"gravity","tagname":"method","owner":"Components.Physics.Box2d.IgeBox2dComponent","id":"method-gravity","meta":{}},{"name":"implement","tagname":"method","owner":"Core.IgeClass","id":"method-implement","meta":{}},{"name":"log","tagname":"method","owner":"Core.IgeClass","id":"method-log","meta":{}},{"name":"mode","tagname":"method","owner":"Components.Physics.Box2d.IgeBox2dComponent","id":"method-mode","meta":{}},{"name":"networkDebugMode","tagname":"method","owner":"Components.Physics.Box2d.IgeBox2dComponent","id":"method-networkDebugMode","meta":{}},{"name":"off","tagname":"method","owner":"Core.IgeEventingClass","id":"method-off","meta":{}},{"name":"on","tagname":"method","owner":"Core.IgeEventingClass","id":"method-on","meta":{}},{"name":"removeComponent","tagname":"method","owner":"Core.IgeClass","id":"method-removeComponent","meta":{}},{"name":"scaleRatio","tagname":"method","owner":"Components.Physics.Box2d.IgeBox2dComponent","id":"method-scaleRatio","meta":{}},{"name":"sleep","tagname":"method","owner":"Components.Physics.Box2d.IgeBox2dComponent","id":"method-sleep","meta":{}},{"name":"staticsFromMap","tagname":"method","owner":"Components.Physics.Box2d.IgeBox2dComponent","id":"method-staticsFromMap","meta":{}},{"name":"updateCallback","tagname":"method","owner":"Components.Physics.Box2d.IgeBox2dComponent","id":"method-updateCallback","meta":{}},{"name":"vanilla","tagname":"method","owner":"Core.IgeClass","id":"method-vanilla","meta":{}},{"name":"world","tagname":"method","owner":"Components.Physics.Box2d.IgeBox2dComponent","id":"method-world","meta":{}}],"aliases":{},"id":"class-Components.Physics.Box2d.IgeBox2dComponent","component":false,"superclasses":["Core.IgeClass","Core.IgeEventingClass"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Alternate names</h4><div class='alternate-class-name'>IgeBox2dComponent</div><h4>Hierarchy</h4><div class='subclass first-child'><a href='#!/api/Core.IgeClass' rel='Core.IgeClass' class='docClass'>Core.IgeClass</a><div class='subclass '><a href='#!/api/Core.IgeEventingClass' rel='Core.IgeEventingClass' class='docClass'>Core.IgeEventingClass</a><div class='subclass '><strong>Components.Physics.Box2d.IgeBox2dComponent</strong></div></div></div><h4>Files</h4><div class='dependency'><a href='source/IgeBox2dComponent.html#Components-Physics-Box2d-IgeBox2dComponent' target='_blank'>IgeBox2dComponent.js</a></div></pre><div class='doc-contents'><p>The engine's box2d component class.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-_behaviour' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Components.Physics.Box2d.IgeBox2dComponent'>Components.Physics.Box2d.IgeBox2dComponent</span><br/><a href='source/IgeBox2dComponent.html#Components-Physics-Box2d-IgeBox2dComponent-method-_behaviour' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Components.Physics.Box2d.IgeBox2dComponent-method-_behaviour' class='name expandable'>_behaviour</a>( <span class='pre'>ctx</span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>Steps the physics simulation forward. ...</div><div class='long'><p>Steps the physics simulation forward.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ctx</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-_processRemovals' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Core.IgeEventingClass' rel='Core.IgeEventingClass' class='defined-in docClass'>Core.IgeEventingClass</a><br/><a href='source/IgeEventingClass.html#Core-IgeEventingClass-method-_processRemovals' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Core.IgeEventingClass-method-_processRemovals' class='name expandable'>_processRemovals</a>( <span class='pre'></span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>Loops the removals array and processes off() calls for\neach array item. ...</div><div class='long'><p>Loops the removals array and processes off() calls for\neach array item.</p>\n</div></div></div><div id='method-addComponent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Core.IgeClass' rel='Core.IgeClass' class='defined-in docClass'>Core.IgeClass</a><br/><a href='source/IgeClass.html#Core-IgeClass-method-addComponent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Core.IgeClass-method-addComponent' class='name expandable'>addComponent</a>( <span class='pre'>component, [options]</span> ) : <a href=\"#!/api/Core.IgeClass\" rel=\"Core.IgeClass\" class=\"docClass\">IgeClass</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Creates a new instance of the component argument passing\nthe options argument to the component as it is initialised. ...</div><div class='long'><p>Creates a new instance of the component argument passing\nthe options argument to the component as it is initialised.\nThe new component instance is then added to \"this\" via\na property name that is defined in the component class as\n\"componentId\".</p>\n\n<h1>Add the velocity component to an entity</h1>\n\n<pre><code>var entity = new IgeEntity();\nentity.addComponent(IgeVelocityComponent);\n\n// Now that the component is added, we can access\n// the component via it's namespace. Call the\n// \"byAngleAndPower\" method of the velocity component:\nentity.velocity.byAngleAndPower(Math.radians(20), 0.1);\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>component</span> : <a href=\"#!/api/Core.IgeClass\" rel=\"Core.IgeClass\" class=\"docClass\">IgeClass</a><div class='sub-desc'><p>The class definition of the component.</p>\n</div></li><li><span class='pre'>options</span> : Object (optional)<div class='sub-desc'><p>An options parameter to pass to the component\non init.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Core.IgeClass\" rel=\"Core.IgeClass\" class=\"docClass\">IgeClass</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-classId' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Core.IgeClass' rel='Core.IgeClass' class='defined-in docClass'>Core.IgeClass</a><br/><a href='source/IgeClass.html#Core-IgeClass-method-classId' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Core.IgeClass-method-classId' class='name expandable'>classId</a>( <span class='pre'></span> ) : string<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the class id. ...</div><div class='long'><p>Returns the class id. Primarily used to help identify\nwhat class an instance was instantiated with and is also\noutput during the ige.scenegraph() method's console logging\nto show what class an object belongs to.</p>\n\n<h1>Get the class id of an object</h1>\n\n<pre><code>var entity = new IgeEntity();\n\n// Will output \"IgeEntity\"\nconsole.log(entity.classId());\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>string</span><div class='sub-desc'><p>class id</p>\n</div></li></ul></div></div></div><div id='method-contactListener' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Components.Physics.Box2d.IgeBox2dComponent'>Components.Physics.Box2d.IgeBox2dComponent</span><br/><a href='source/IgeBox2dComponent.html#Components-Physics-Box2d-IgeBox2dComponent-method-contactListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Components.Physics.Box2d.IgeBox2dComponent-method-contactListener' class='name expandable'>contactListener</a>( <span class='pre'>beginContactCallback, endContactCallback, preSolve, postSolve</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Creates a contact listener with the specified callbacks. ...</div><div class='long'><p>Creates a contact listener with the specified callbacks. When\ncontacts begin and end inside the box2d simulation the specified\ncallbacks are fired.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>beginContactCallback</span> : Function<div class='sub-desc'><p>The method to call when the contact listener detects contact has started.</p>\n</div></li><li><span class='pre'>endContactCallback</span> : Function<div class='sub-desc'><p>The method to call when the contact listener detects contact has ended.</p>\n</div></li><li><span class='pre'>preSolve</span> : Function<div class='sub-desc'>\n</div></li><li><span class='pre'>postSolve</span> : Function<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-createBody' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Components.Physics.Box2d.IgeBox2dComponent'>Components.Physics.Box2d.IgeBox2dComponent</span><br/><a href='source/IgeBox2dComponent.html#Components-Physics-Box2d-IgeBox2dComponent-method-createBody' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Components.Physics.Box2d.IgeBox2dComponent-method-createBody' class='name expandable'>createBody</a>( <span class='pre'>entity, body</span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Creates a Box2d body and attaches it to an IGE entity\nbased on the supplied body definition. ...</div><div class='long'><p>Creates a Box2d body and attaches it to an IGE entity\nbased on the supplied body definition.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>entity</span> : <a href=\"#!/api/Core.IgeEntity\" rel=\"Core.IgeEntity\" class=\"docClass\">IgeEntity</a><div class='sub-desc'>\n</div></li><li><span class='pre'>body</span> : Object<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>b2Body</p>\n</div></li></ul></div></div></div><div id='method-createFixture' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Components.Physics.Box2d.IgeBox2dComponent'>Components.Physics.Box2d.IgeBox2dComponent</span><br/><a href='source/IgeBox2dComponent.html#Components-Physics-Box2d-IgeBox2dComponent-method-createFixture' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Components.Physics.Box2d.IgeBox2dComponent-method-createFixture' class='name expandable'>createFixture</a>( <span class='pre'>params</span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Creates a Box2d fixture and returns it. ...</div><div class='long'><p>Creates a Box2d fixture and returns it.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>params</span> : Object<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>b2FixtureDef</p>\n</div></li></ul></div></div></div><div id='method-createWorld' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Components.Physics.Box2d.IgeBox2dComponent'>Components.Physics.Box2d.IgeBox2dComponent</span><br/><a href='source/IgeBox2dComponent.html#Components-Physics-Box2d-IgeBox2dComponent-method-createWorld' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Components.Physics.Box2d.IgeBox2dComponent-method-createWorld' class='name expandable'>createWorld</a>( <span class='pre'>[id], [options]</span> ) : *<span class=\"signature\"></span></div><div class='description'><div class='short'>Creates the Box2d world. ...</div><div class='long'><p>Creates the Box2d world.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>id</span> : String (optional)<div class='sub-desc'>\n</div></li><li><span class='pre'>options</span> : Object (optional)<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>*</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-data' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Core.IgeClass' rel='Core.IgeClass' class='defined-in docClass'>Core.IgeClass</a><br/><a href='source/IgeClass.html#Core-IgeClass-method-data' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Core.IgeClass-method-data' class='name expandable'>data</a>( <span class='pre'>key, [value]</span> ) : <a href=\"#!/api/Core.IgeClass\" rel=\"Core.IgeClass\" class=\"docClass\">IgeClass</a>/Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets / sets a key / value pair in the object's data object. ...</div><div class='long'><p>Gets / sets a key / value pair in the object's data object. Useful for\nstoring arbitrary game data in the object.</p>\n\n<h1>Set some arbitrary data key value pair</h1>\n\n<pre><code>var entity = new IgeEntity();\nentity.data('playerScore', 100);\nentity.data('playerName', 'iRock');\n</code></pre>\n\n<h1>Get the value of a data key</h1>\n\n<pre><code>console.log(entity.data('playerScore'));\nconsole.log(entity.data('playerName'));\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>key</span> : String<div class='sub-desc'><p>The key under which the data resides.</p>\n</div></li><li><span class='pre'>value</span> : Object (optional)<div class='sub-desc'><p>The data to set under the specified key.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Core.IgeClass\" rel=\"Core.IgeClass\" class=\"docClass\">IgeClass</a>/Object</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-destroyBody' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Components.Physics.Box2d.IgeBox2dComponent'>Components.Physics.Box2d.IgeBox2dComponent</span><br/><a href='source/IgeBox2dComponent.html#Components-Physics-Box2d-IgeBox2dComponent-method-destroyBody' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Components.Physics.Box2d.IgeBox2dComponent-method-destroyBody' class='name expandable'>destroyBody</a>( <span class='pre'>body</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Queues a body for removal from the physics world. ...</div><div class='long'><p>Queues a body for removal from the physics world.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>body</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-emit' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Core.IgeEventingClass' rel='Core.IgeEventingClass' class='defined-in docClass'>Core.IgeEventingClass</a><br/><a href='source/IgeEventingClass.html#Core-IgeEventingClass-method-emit' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Core.IgeEventingClass-method-emit' class='name expandable'>emit</a>( <span class='pre'>eventName, args</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Emit an event by name. ...</div><div class='long'><p>Emit an event by name.</p>\n\n<h1>Emit an Event</h1>\n\n<pre><code>// Emit the event named \"hello\"\nmyEntity.emit('hello');\n</code></pre>\n\n<h1>Emit an Event With Data Object</h1>\n\n<pre><code>// Emit the event named \"hello\"\nmyEntity.emit('hello', {moo: true});\n</code></pre>\n\n<h1>Emit an Event With Multiple Data Values</h1>\n\n<pre><code>// Emit the event named \"hello\"\nmyEntity.emit('hello', [{moo: true}, 'someString']);\n</code></pre>\n\n<h1>Listen for Event Data</h1>\n\n<pre><code>// Set a listener to listen for the data (multiple values emitted\n// from an event are passed as function arguments)\nmyEntity.on('hello', function (arg1, arg2) {\n    console.log(arg1, arg2);\n}\n\n// Emit the event named \"hello\"\nmyEntity.emit('hello', ['data1', 'data2']);\n\n// The console output is:\n//    data1, data2\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventName</span> : Object<div class='sub-desc'><p>The name of the event to emit.</p>\n</div></li><li><span class='pre'>args</span> : Object/Array<div class='sub-desc'><p>The arguments to send to any listening methods.\nIf you are sending multiple arguments, use an array containing each argument.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-enableDebug' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Components.Physics.Box2d.IgeBox2dComponent'>Components.Physics.Box2d.IgeBox2dComponent</span><br/><a href='source/IgeBox2dComponent.html#Components-Physics-Box2d-IgeBox2dComponent-method-enableDebug' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Components.Physics.Box2d.IgeBox2dComponent-method-enableDebug' class='name expandable'>enableDebug</a>( <span class='pre'>mountScene</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Creates a debug entity that outputs the bounds of each box2d\nbody during standard engine ticks. ...</div><div class='long'><p>Creates a debug entity that outputs the bounds of each box2d\nbody during standard engine ticks.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>mountScene</span> : <a href=\"#!/api/Core.IgeEntity\" rel=\"Core.IgeEntity\" class=\"docClass\">IgeEntity</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-eventList' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Core.IgeEventingClass' rel='Core.IgeEventingClass' class='defined-in docClass'>Core.IgeEventingClass</a><br/><a href='source/IgeEventingClass.html#Core-IgeEventingClass-method-eventList' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Core.IgeEventingClass-method-eventList' class='name expandable'>eventList</a>( <span class='pre'></span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns an object containing the current event listeners. ...</div><div class='long'><p>Returns an object containing the current event listeners.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-extend' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Core.IgeClass' rel='Core.IgeClass' class='defined-in docClass'>Core.IgeClass</a><br/><a href='source/IgeClass.html#Core-IgeClass-method-extend' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Core.IgeClass-method-extend' class='name expandable'>extend</a>( <span class='pre'></span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Create a new IgeClass that inherits from this class\n\nCreating a new class by extending an existing one\n\nvar NewClass ...</div><div class='long'><p>Create a new IgeClass that inherits from this class</p>\n\n<h1>Creating a new class by extending an existing one</h1>\n\n<pre><code>var NewClass = <a href=\"#!/api/Core.IgeClass-method-extend\" rel=\"Core.IgeClass-method-extend\" class=\"docClass\">IgeClass.extend</a>({\n    // Init is your constructor\n    init: function () {\n        console.log('I\\'m alive!');\n    }\n});\n</code></pre>\n\n<p>Further reading: <a href=\"http://www.isogenicengine.com/documentation/isogenic-game-engine/versions/1-1-0/manual/engine-fundamentals/classes/extending-classes/\">Extending Classes</a></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-gravity' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Components.Physics.Box2d.IgeBox2dComponent'>Components.Physics.Box2d.IgeBox2dComponent</span><br/><a href='source/IgeBox2dComponent.html#Components-Physics-Box2d-IgeBox2dComponent-method-gravity' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Components.Physics.Box2d.IgeBox2dComponent-method-gravity' class='name expandable'>gravity</a>( <span class='pre'>x, y</span> ) : *<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets / sets the gravity vector. ...</div><div class='long'><p>Gets / sets the gravity vector.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>x</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>y</span> : Object<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>*</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-implement' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Core.IgeClass' rel='Core.IgeClass' class='defined-in docClass'>Core.IgeClass</a><br/><a href='source/IgeClass.html#Core-IgeClass-method-implement' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Core.IgeClass-method-implement' class='name expandable'>implement</a>( <span class='pre'>classObj, overwrite</span> ) : <a href=\"#!/api/Core.IgeClass\" rel=\"Core.IgeClass\" class=\"docClass\">IgeClass</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Copies all properties and methods from the classObj object\nto \"this\". ...</div><div class='long'><p>Copies all properties and methods from the classObj object\nto \"this\". If the overwrite flag is not set or set to false,\nonly properties and methods that don't already exists in\n\"this\" will be copied. If overwrite is true, they will be\ncopied regardless.</p>\n\n<h1>Implement all the methods of an object into another object</h1>\n\n<pre><code>// Create a couple of test entities with ids\nvar entity1 = new IgeEntity().id('entity1'),\n    entity2 = new IgeEntity().id('entity2');\n\n// Let's define an object with a couple of methods\nvar obj = {\n    newMethod1: function () {\n        console.log('method1 called on object: ' + this.id());\n    },\n\n    newMethod2: function () {\n        console.log('method2 called on object: ' + this.id());\n    }\n};\n\n// Now let's implement the methods on our entities\nentity1.implement(obj);\nentity2.implement(obj);\n\n// The entities now have the newMethod1 and newMethod2\n// methods as part of their instance so we can call them:\nentity1.newMethod1();\n\n// The output to the console is:\n//    method1 called on object: entity1\n\n// Now let's call newMethod2 on entity2:\nentity2.newMethod2();\n\n// The output to the console is:\n//    method2 called on object: entity2\n\n// As you can see, this is a great way to add extra modular\n// functionality to objects / entities at runtime.\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>classObj</span> : Function<div class='sub-desc'>\n</div></li><li><span class='pre'>overwrite</span> : Boolean<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Core.IgeClass\" rel=\"Core.IgeClass\" class=\"docClass\">IgeClass</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-log' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Core.IgeClass' rel='Core.IgeClass' class='defined-in docClass'>Core.IgeClass</a><br/><a href='source/IgeClass.html#Core-IgeClass-method-log' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Core.IgeClass-method-log' class='name expandable'>log</a>( <span class='pre'>text, type, [obj]</span> ) : <a href=\"#!/api/Core.IgeClass\" rel=\"Core.IgeClass\" class=\"docClass\">IgeClass</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Provides logging capabilities to all IgeClass instances. ...</div><div class='long'><p>Provides logging capabilities to all IgeClass instances.</p>\n\n<h1>Log a message</h1>\n\n<pre><code>var entity = new IgeEntity();\n\n// Will output:\n//     IGE *log* [IgeEntity] : hello\nentity.log('Hello');\n</code></pre>\n\n<h1>Log an info message with an optional parameter</h1>\n\n<pre><code>var entity = new IgeEntity(),\n    param = 'moo';\n\n// Will output:\n//    moo\n//    IGE *log* [IgeEntity] : hello\nentity.log('Hello', 'info', param);\n</code></pre>\n\n<h1>Log a warning message (which will cause a stack trace to be shown)</h1>\n\n<pre><code>var entity = new IgeEntity();\n\n// Will output (stack trace is just an example here, real one will be more useful):\n//    Stack: {anonymous}()@&lt;anonymous&gt;:2:8\n//    ---- Object.InjectedScript._evaluateOn (&lt;anonymous&gt;:444:39)\n//    ---- Object.InjectedScript._evaluateAndWrap (&lt;anonymous&gt;:403:52)\n//    ---- Object.InjectedScript.evaluate (&lt;anonymous&gt;:339:21)\n//    IGE *warning* [IgeEntity] : A test warning\nentity.log('A test warning', 'warning');\n</code></pre>\n\n<h1>Log an error message (which will cause an exception to be raised and a stack trace to be shown)</h1>\n\n<pre><code>var entity = new IgeEntity();\n\n// Will output (stack trace is just an example here, real one will be more useful):\n//    Stack: {anonymous}()@&lt;anonymous&gt;:2:8\n//    ---- Object.InjectedScript._evaluateOn (&lt;anonymous&gt;:444:39)\n//    ---- Object.InjectedScript._evaluateAndWrap (&lt;anonymous&gt;:403:52)\n//    ---- Object.InjectedScript.evaluate (&lt;anonymous&gt;:339:21)\n//    IGE *error* [IgeEntity] : An error message\nentity.log('An error message', 'error');\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>text</span> : String<div class='sub-desc'><p>The text to log.</p>\n</div></li><li><span class='pre'>type</span> : String<div class='sub-desc'><p>The type of log to output, can be 'log',\n'info', 'warning' or 'error'.</p>\n</div></li><li><span class='pre'>obj</span> : Object (optional)<div class='sub-desc'><p>An optional object that will be output\nbefore the log text is output.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Core.IgeClass\" rel=\"Core.IgeClass\" class=\"docClass\">IgeClass</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-mode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Components.Physics.Box2d.IgeBox2dComponent'>Components.Physics.Box2d.IgeBox2dComponent</span><br/><a href='source/IgeBox2dComponent.html#Components-Physics-Box2d-IgeBox2dComponent-method-mode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Components.Physics.Box2d.IgeBox2dComponent-method-mode' class='name expandable'>mode</a>( <span class='pre'>val</span> ) : *<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets / sets the world interval mode. ...</div><div class='long'><p>Gets / sets the world interval mode. In mode 0 (zero) the\nbox2d simulation is synced to the framerate of the engine's\nrenderer. In mode 1 the box2d simulation is stepped at a constant\nspeed regardless of the engine's renderer. This must be set <em>before</em>\ncalling the start() method in order for the setting to take effect.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>val</span> : Number<div class='sub-desc'><p>The mode, either 0 or 1.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>*</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-networkDebugMode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Components.Physics.Box2d.IgeBox2dComponent'>Components.Physics.Box2d.IgeBox2dComponent</span><br/><a href='source/IgeBox2dComponent.html#Components-Physics-Box2d-IgeBox2dComponent-method-networkDebugMode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Components.Physics.Box2d.IgeBox2dComponent-method-networkDebugMode' class='name expandable'>networkDebugMode</a>( <span class='pre'>val</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>If enabled, sets the physics world into network debug mode which\nwill stop the world from generating collisions but s...</div><div class='long'><p>If enabled, sets the physics world into network debug mode which\nwill stop the world from generating collisions but still allow us\nto see shape outlines as they are attached to bodies. Useful when\nyour physics system is server-side but seeing client-side shape\ndata is useful for debugging collisions.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>val</span> : Boolean<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-off' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Core.IgeEventingClass' rel='Core.IgeEventingClass' class='defined-in docClass'>Core.IgeEventingClass</a><br/><a href='source/IgeEventingClass.html#Core-IgeEventingClass-method-off' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Core.IgeEventingClass-method-off' class='name expandable'>off</a>( <span class='pre'>eventName, evtListener, callback</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Remove an event listener. ...</div><div class='long'><p>Remove an event listener. If the _processing flag is true\nthen the removal will be placed in the removals array to be\nprocessed after the event loop has completed in the emit()\nmethod.</p>\n\n<h1>Switch off an Event Listener</h1>\n\n<pre><code>// Register event lister and store in \"evt\"\nvar evt = myEntity.on('mouseDown', function () { console.log('down'); });\n\n// Switch off event listener\nmyEntity.off('mouseDown', evt);\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventName</span> : Boolean<div class='sub-desc'><p>The name of the event you originally registered to listen for.</p>\n</div></li><li><span class='pre'>evtListener</span> : Object<div class='sub-desc'><p>The event listener object to cancel. This object is the one\nreturned when calling the on() method. It is NOT the method you passed as the second argument\nto the on() method.</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>The callback method to call when the event listener has been\nsuccessfully removed. If you attempt to remove a listener during the event firing loop\nthen the listener will not immediately be removed but will be queued for removal before\nthe next listener loop is fired. In this case you may like to be informed via callback\nwhen the listener has been fully removed in which case, provide a method for this argument.</p>\n\n<p>The callback will be passed a single boolean argument denoting if the removal was successful\n(true) or the listener did not exist to remove (false).</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-on' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Core.IgeEventingClass' rel='Core.IgeEventingClass' class='defined-in docClass'>Core.IgeEventingClass</a><br/><a href='source/IgeEventingClass.html#Core-IgeEventingClass-method-on' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Core.IgeEventingClass-method-on' class='name expandable'>on</a>( <span class='pre'>eventName, call, [context], [oneShot], [sendEventName]</span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Add an event listener method for an event. ...</div><div class='long'><p>Add an event listener method for an event.</p>\n\n<h1>Add an Event Listener</h1>\n\n<pre><code>// Register event lister and store in \"evt\"\nvar evt = myEntity.on('mouseDown', function () { console.log('down'); });\n</code></pre>\n\n<h1>Listen for Event Data</h1>\n\n<pre><code>// Set a listener to listen for the data (multiple values emitted\n// from an event are passed as function arguments)\nmyEntity.on('hello', function (arg1, arg2) {\n    console.log(arg1, arg2);\n}\n\n// Emit the event named \"hello\"\nmyEntity.emit('hello', ['data1', 'data2']);\n\n// The console output is:\n//    data1, data2\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventName</span> : String/Array<div class='sub-desc'><p>The name of the event to listen for (string), or an array of events to listen for.</p>\n</div></li><li><span class='pre'>call</span> : Function<div class='sub-desc'><p>The method to call when the event listener is triggered.</p>\n</div></li><li><span class='pre'>context</span> : Object (optional)<div class='sub-desc'><p>The context in which the call to the listening method will be made (sets the 'this' variable in the method to the object passed as this parameter).</p>\n</div></li><li><span class='pre'>oneShot</span> : Boolean (optional)<div class='sub-desc'><p>If set, will instruct the listener to only listen to the event being fired once and will not fire again.</p>\n</div></li><li><span class='pre'>sendEventName</span> : Boolean (optional)<div class='sub-desc'><p>If set, will instruct the emitter to send the event name as the argument instead of any emitted arguments.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>The event listener object. Hold this value if you later want to turn off the event listener.</p>\n</div></li></ul></div></div></div><div id='method-removeComponent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Core.IgeClass' rel='Core.IgeClass' class='defined-in docClass'>Core.IgeClass</a><br/><a href='source/IgeClass.html#Core-IgeClass-method-removeComponent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Core.IgeClass-method-removeComponent' class='name expandable'>removeComponent</a>( <span class='pre'>componentId</span> ) : <a href=\"#!/api/Core.IgeClass\" rel=\"Core.IgeClass\" class=\"docClass\">IgeClass</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Removes a component by it's id. ...</div><div class='long'><p>Removes a component by it's id.</p>\n\n<h1>Remove a component by it's id (namespace)</h1>\n\n<pre><code>var entity = new IgeEntity();\n\n// Let's add the velocity component\nentity.addComponent(IgeVelocityComponent);\n\n// Now that the component is added, let's remove\n// it via it's id (\"velocity\")\nentity.removeComponent('velocity');\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>componentId</span> : String<div class='sub-desc'><p>The id of the component to remove.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Core.IgeClass\" rel=\"Core.IgeClass\" class=\"docClass\">IgeClass</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-scaleRatio' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Components.Physics.Box2d.IgeBox2dComponent'>Components.Physics.Box2d.IgeBox2dComponent</span><br/><a href='source/IgeBox2dComponent.html#Components-Physics-Box2d-IgeBox2dComponent-method-scaleRatio' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Components.Physics.Box2d.IgeBox2dComponent-method-scaleRatio' class='name expandable'>scaleRatio</a>( <span class='pre'>val</span> ) : *<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets / sets the current engine to box2d scaling ratio. ...</div><div class='long'><p>Gets / sets the current engine to box2d scaling ratio.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>val</span> : Object<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>*</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-sleep' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Components.Physics.Box2d.IgeBox2dComponent'>Components.Physics.Box2d.IgeBox2dComponent</span><br/><a href='source/IgeBox2dComponent.html#Components-Physics-Box2d-IgeBox2dComponent-method-sleep' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Components.Physics.Box2d.IgeBox2dComponent-method-sleep' class='name expandable'>sleep</a>( <span class='pre'>[val]</span> ) : *<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets / sets if the world should allow sleep or not. ...</div><div class='long'><p>Gets / sets if the world should allow sleep or not.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>val</span> : Boolean (optional)<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>*</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-staticsFromMap' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Components.Physics.Box2d.IgeBox2dComponent'>Components.Physics.Box2d.IgeBox2dComponent</span><br/><a href='source/IgeBox2dComponent.html#Components-Physics-Box2d-IgeBox2dComponent-method-staticsFromMap' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Components.Physics.Box2d.IgeBox2dComponent-method-staticsFromMap' class='name expandable'>staticsFromMap</a>( <span class='pre'>mapLayer, [callback]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Produces static box2d bodies from passed map data. ...</div><div class='long'><p>Produces static box2d bodies from passed map data.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>mapLayer</span> : <a href=\"#!/api/Core.IgeTileMap2d\" rel=\"Core.IgeTileMap2d\" class=\"docClass\">IgeTileMap2d</a><div class='sub-desc'>\n</div></li><li><span class='pre'>callback</span> : Function (optional)<div class='sub-desc'><p>Returns true or false depending\non if the passed map data should be included as part of the\nbox2d static object data. This allows you to control what\nparts of the map data are to be considered for box2d static\nobjects and which parts are to be ignored. If not passed then\nany tile with any map data is considered part of the static\nobject data.</p>\n</div></li></ul></div></div></div><div id='method-updateCallback' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Components.Physics.Box2d.IgeBox2dComponent'>Components.Physics.Box2d.IgeBox2dComponent</span><br/><a href='source/IgeBox2dComponent.html#Components-Physics-Box2d-IgeBox2dComponent-method-updateCallback' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Components.Physics.Box2d.IgeBox2dComponent-method-updateCallback' class='name expandable'>updateCallback</a>( <span class='pre'>method</span> ) : *<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets / sets the callback method that will be called after\nevery physics world step. ...</div><div class='long'><p>Gets / sets the callback method that will be called after\nevery physics world step.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>method</span> : Object<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>*</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-vanilla' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Core.IgeClass' rel='Core.IgeClass' class='defined-in docClass'>Core.IgeClass</a><br/><a href='source/IgeClass.html#Core-IgeClass-method-vanilla' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Core.IgeClass-method-vanilla' class='name expandable'>vanilla</a>( <span class='pre'>prop</span> ) : Function<span class=\"signature\"></span></div><div class='description'><div class='short'>Test method ...</div><div class='long'><p>Test method</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>prop</span> : Object<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Function</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-world' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Components.Physics.Box2d.IgeBox2dComponent'>Components.Physics.Box2d.IgeBox2dComponent</span><br/><a href='source/IgeBox2dComponent.html#Components-Physics-Box2d-IgeBox2dComponent-method-world' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Components.Physics.Box2d.IgeBox2dComponent-method-world' class='name expandable'>world</a>( <span class='pre'></span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the current Box2d world object. ...</div><div class='long'><p>Gets the current Box2d world object.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>b2World</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});